# postgres service
apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - protocol: TCP
      port: 5432
      targetPort: 5432
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-database
spec:
  selector:
    matchLabels:
      app: postgres-database
  serviceName: postgres-service
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres-database
    spec:
      containers:
        - name: postgres-database
          # Image docs: https://hub.docker.com/_/postgres
          image: postgres 
          env:
              # automatically sets the password of the image to `toor`
            - name: POSTGRES_PASSWORD
              value: toor
              # This is where the db files will be stored
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-disk
              mountPath: /var/lib/postgresql/data
      volumes:
        - name: postgres-disk
          hostPath:
            path: /mnt # directory location on host
---

###################
# Our Stuff
###################


# mail-service service
apiVersion: v1
kind: Service
metadata:
  name: mail-service-service
spec:
  selector:
    app: mail-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
# auth-service service
apiVersion: v1
kind: Service
metadata:
  name: auth-service-service
spec:
  selector:
    app: auth-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
# Mail Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mail-service-deployment
spec:
  selector:
    matchLabels:
      app: mail-service # has to match .spec.template.metadata.labels
  serviceName: "mail-service-service"
  template:
    metadata:
      labels:
        app: mail-service # has to match .spec.selector.matchLabels
    spec:
      containers:
        - name: mail-service-container
          image: mail-service
          imagePullPolicy: Never # This means it uses local docker image... will change to use public later
          ports:
            - containerPort: 8080
              name: http
          command:
            [
              "/bin/mail-service",
              "--port=8080",
              "--database-url=postgres://$(POSTGRES_SERVICE_HOST)?dbname=mail&user=postgres&password=toor"
            ]
---
# Auth Service Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth-service-deployment
spec:
  selector:
    matchLabels:
      app: auth-service # has to match .spec.template.metadata.labels
  serviceName: "auth-service-service"
  template:
    metadata:
      labels:
        app: auth-service # has to match .spec.selector.matchLabels
    spec:
      containers:
        - name: auth-service-container
          image: auth-service
          imagePullPolicy: Never # This means it uses local docker image... will change to use public later
          ports:
            - containerPort: 8080
              name: http
          command:
            [
              "/bin/auth-service",
              "--port=8080",
              "--database-url=postgres://$(POSTGRES_SERVICE_HOST)?dbname=auth&user=postgres&password=toor",
              "--site-external-url=http://localhost:8080",
              "--mail-service-url=http://$(MAIL_SERVICE_SERVICE_HOST)",
            ]
