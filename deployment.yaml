# mail-service service
apiVersion: v1
kind: Service
metadata:
  name: mail-service-service
spec:
  selector:
    app: mail-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
# auth-service service
apiVersion: v1
kind: Service
metadata:
  name: auth-service-service
spec:
  selector:
    app: auth-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
# Mail Service StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mail-service-statefulset
spec:
  selector:
    matchLabels:
      app: mail-service # has to match .spec.template.metadata.labels
  serviceName: "mail-service-service"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: mail-service # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: mail-service-container
          imagePullPolicy: Never # This means it uses local docker image... will change to use public later
          image: mail-service
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: mail-service-volume
              mountPath: /mnt # mail-service-data will be mounted onto /mnt inside the container
          command:
            ["/bin/mail-service", "--port=8080", "--database-url=/mnt/mail.db"]
      volumes:
        - name: mail-service-volume
          hostPath:
            path: /mnt # directory location on host
---
# Auth Service StatefulSet
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: auth-service-statefulset
spec:
  selector:
    matchLabels:
      app: auth-service # has to match .spec.template.metadata.labels
  serviceName: "auth-service-service"
  replicas: 1 # by default is 1
  template:
    metadata:
      labels:
        app: auth-service # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      containers:
        - name: auth-service-container
          imagePullPolicy: Never # This means it uses local docker image... will change to use public later
          image: auth-service
          ports:
            - containerPort: 8080
              name: http
          volumeMounts:
            - name: auth-service-volume
              mountPath: /mnt # auth-service-data will be mounted onto /mnt inside the container
          command:
            [
              "/bin/auth-service",
              "--port=8080",
              "--database-url=/mnt/auth.db",
              "--site-external-url=http://localhost:8080",
              "--mail-service-url=http://$(MAIL_SERVICE_SERVICE_HOST)",
            ]
      volumes:
        - name: auth-service-volume
          hostPath:
            path: /mnt # directory location on host
